{"code":"/**\r\n * @Description : portal provider\r\n * @Create on : 2019/11/17 15:55\r\n * @author liuyunjs\r\n * @version 0.0.1\r\n **/\r\nimport { __extends } from \"tslib\";\r\nimport * as React from 'react';\r\nimport { View, StyleSheet, DeviceEventEmitter } from 'react-native';\r\nimport { ADD_PORTAL, REMOVE_PORTAL } from './event-name';\r\nvar default_1 = /** @class */ (function (_super) {\r\n    __extends(default_1, _super);\r\n    function default_1(props) {\r\n        var _this = _super.call(this, props) || this;\r\n        _this.addPortal = function (event) {\r\n            _this.setState(function (prevState) {\r\n                var list = prevState.portalList.filter(function (item) { return item.key !== event.key; });\r\n                list.push(event);\r\n                return {\r\n                    portalList: list,\r\n                };\r\n            });\r\n        };\r\n        _this.removePortal = function (key) {\r\n            _this.setState(function (prevState) {\r\n                return {\r\n                    portalList: prevState.portalList.filter(function (item) { return item.key !== key; }),\r\n                };\r\n            });\r\n        };\r\n        _this.state = {\r\n            portalList: [],\r\n        };\r\n        _this.bindEvents();\r\n        return _this;\r\n    }\r\n    default_1.prototype.componentWillUnmount = function () {\r\n        this.bindEvents(true);\r\n    };\r\n    default_1.prototype.bindEvents = function (isRemove) {\r\n        var key = isRemove ? 'removeListener' : 'addListener';\r\n        DeviceEventEmitter[key](ADD_PORTAL, this.addPortal);\r\n        DeviceEventEmitter[key](REMOVE_PORTAL, this.removePortal);\r\n    };\r\n    default_1.prototype.render = function () {\r\n        return (React.createElement(React.Fragment, null,\r\n            this.props.children,\r\n            React.createElement(View, { style: StyleSheet.absoluteFillObject, pointerEvents: \"box-none\" }, this.state.portalList.map(function (item) {\r\n                return React.cloneElement(item.element, { key: item.key });\r\n            }))));\r\n    };\r\n    return default_1;\r\n}(React.PureComponent));\r\nexport default default_1;\r\n","references":["/Users/liuyunjs/Documents/projects/portal/node_modules/@types/react/index.d.ts","/Users/liuyunjs/Documents/projects/portal/node_modules/@types/react-native/index.d.ts","/Users/liuyunjs/Documents/projects/portal/src/portal/types.ts","/Users/liuyunjs/Documents/projects/portal/src/portal/event-name.ts"]}
